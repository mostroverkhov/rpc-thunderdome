// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/github/mostroverkhov/r2/testing/simpleservice.proto

package com.github.mostroverkhov.r2.testing;

public final class SimpleServiceProto {
  private SimpleServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_mostroverkhov_r2_testing_SimpleRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_mostroverkhov_r2_testing_SimpleRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_mostroverkhov_r2_testing_SimpleResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_mostroverkhov_r2_testing_SimpleResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7com/github/mostroverkhov/r2/testing/si" +
      "mpleservice.proto\022#com.github.mostroverk" +
      "hov.r2.testing\"\'\n\rSimpleRequest\022\026\n\016reque" +
      "stMessage\030\001 \001(\t\")\n\016SimpleResponse\022\027\n\017res" +
      "ponseMessage\030\001 \001(\tB;\n#com.github.mostrov" +
      "erkhov.r2.testingB\022SimpleServiceProtoP\001b" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_mostroverkhov_r2_testing_SimpleRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_mostroverkhov_r2_testing_SimpleRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_mostroverkhov_r2_testing_SimpleRequest_descriptor,
        new java.lang.String[] { "RequestMessage", });
    internal_static_com_github_mostroverkhov_r2_testing_SimpleResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_github_mostroverkhov_r2_testing_SimpleResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_mostroverkhov_r2_testing_SimpleResponse_descriptor,
        new java.lang.String[] { "ResponseMessage", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
